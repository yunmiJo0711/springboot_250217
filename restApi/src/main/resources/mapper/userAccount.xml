<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.iclass.rest.mapper.UserAccountMapper">
	<!-- UserAccount dto 클래스와 UserAccountMapper 인터페이스 만드세요. -->
	<insert id="insert" parameterType="UserAccount">
		INSERT INTO tbl_user_account 
			   (userid, username, password, birth, gender, email) 
        VALUES
               (#{userid}, #{username}, #{password}, #{birth}, #{gender}, #{email})
	</insert>

	<select id="selectForLogin" parameterType="java.util.Map" 
								resultType="UserAccount">
	<!-- 2개의 파라미터를 저장하기위해 Map 사용 : Map 에 저장되는 key 는 userid, password-->
		SELECT * FROM 
					TBL_USER_ACCOUNT
				 WHERE userid=#{userid} and password=#{password}
	</select>
	<!-- api 컨트롤러 연습 추가 -->
	<select id="selectAll" resultType="UserAccount">
		SELECT * FROM
			TBL_USER_ACCOUNT
		ORDER BY userid
	</select>
	<select id="selectByEmail" 
			parameterType="String" resultType="int">
		select count(*) from tbl_user_account
		where email = #{email}
	</select>
	<select id="selectByUserid" 
			parameterType="String" resultType="int">
		select count(*) from tbl_user_account
		where userid = #{userid}
	</select>
	<update id="updateEmail" parameterType="UserAccount">
		UPDATE tbl_user_account 
		SET email=#{email}
		WHERE userid=#{userid}
	</update>
	<delete id="delete" parameterType="String">
		DELETE FROM tbl_user_account
		WHERE userid=#{userid}
	</delete>
	<select id="selectByPk" parameterType="String"
			resultType="UserAccount">
		SELECT * FROM tbl_user_account
		WHERE userid = #{userid}
	</select>
</mapper>   